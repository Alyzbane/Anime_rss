name: Generate Anime Feeds
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Tests
        run: |
          cd test
          pytest --cov=src --cov-report=xml

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml

  preview-changes:
    needs: test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Generate Preview
        run: |
          pip install -r requirements.txt
          mkdir -p logs   # This creates the logs directory if it doesn't exist
          touch logs/app.log
          python main.py

      - name: Comment PR with Preview
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const readme = fs.readFileSync('README.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## Preview of changes:\n\n``````'
            });

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run Feed Generator
        if: success()
        run: |
          pip install -r requirements.txt
          mkdir -p logs
          cp logging_deploy.ini logging_config.ini
          python main.py

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md data/
          git commit -m "Update anime feeds" || echo "No changes to commit"
          git push
